{
    "inputPathJson": "./third_party/dear_bindings/dcimgui.json",
    "outputPathTs": "./bindgen/mod.ts",
    "outputPathCpp": "./bindgen/jsimgui.cpp",
    "outputPathInfo": "./bindgen/generator-info.txt",
    "bindings": {
        "typedefs": {
            "ImGuiInputTextCallback": {
                "overrideImpl": {
                    "ts": [
                        "export type ImGuiInputTextCallback = (data: ImGuiInputTextCallbackData) => number;\n"
                    ]
                }
            },
            "ImGuiSizeCallback": {
                "overrideImpl": {
                    "ts": [
                        "export type ImGuiSizeCallback = (data: ImGuiSizeCallbackData) => void;\n"
                    ]
                }
            },
            "ImDrawCallback": {
                "overrideImpl": {
                    "ts": [
                        "export type ImDrawCallback = (parent_list: ImDrawList, cmd: ImDrawCmd) => void;\n"
                    ]
                }
            },

            "ImGuiMemAllocFunc": { "isExcluded": true },
            "ImGuiMemFreeFunc": { "isExcluded": true },
            "ImWchar": { "isExcluded": true }
        },
        "structs": {
            "ImVec2": { "isExcluded": true },
            "ImVec4": { "isExcluded": true },
            "ImTextureRef": { "isExcluded": true },
            "__anonymous_type0": { "isExcluded": true },
            "ImVector_ImGuiTextRange": { "isExcluded": true },
            "ImVector_char": { "isExcluded": true },
            "ImVector_ImGuiStoragePair": { "isExcluded": true },
            "ImVector_ImGuiSelectionRequest": { "isExcluded": true },
            "ImVector_ImDrawChannel": { "isExcluded": true },
            "ImVector_ImDrawCmd": { "isExcluded": true },
            "ImVector_ImDrawIdx": { "isExcluded": true },
            "ImVector_ImDrawVert": { "isExcluded": true },
            "ImVector_ImVec2": { "isExcluded": true },
            "ImVector_ImVec4": { "isExcluded": true },
            "ImVector_ImTextureRef": { "isExcluded": true },
            "ImVector_ImU8": { "isExcluded": true },
            "ImVector_ImDrawListPtr": { "isExcluded": true },
            "ImVector_ImTextureRect": { "isExcluded": true },
            "ImVector_ImU32": { "isExcluded": true },
            "ImVector_ImWchar": { "isExcluded": true },
            "ImVector_ImFontPtr": { "isExcluded": true },
            "ImVector_ImFontConfig": { "isExcluded": true },
            "ImVector_ImDrawListSharedDataPtr": { "isExcluded": true },
            "ImVector_float": { "isExcluded": true },
            "ImVector_ImU16": { "isExcluded": true },
            "ImVector_ImFontGlyph": { "isExcluded": true },
            "ImVector_ImFontConfigPtr": { "isExcluded": true },
            "ImVector_ImGuiPlatformMonitor": { "isExcluded": true },
            "ImVector_ImTextureDataPtr": { "isExcluded": true },
            "ImVector_ImGuiViewportPtr": { "isExcluded": true },

            "ImGuiTextFilter_ImGuiTextRange": { "isExcluded": true },
            "ImDrawCmdHeader": { "isExcluded": true },
            "ImDrawVert": { "isExcluded": true },
            "ImGuiSelectionExternalStorage": { "isExcluded": true },
            "ImColor": { "isExcluded": true },
            "ImGuiSelectionBasicStorage": { "isExcluded": true },
            "ImDrawData": { "isOpaque": true },
            "ImGuiStyle": {
                "fields": {
                    "Colors": { "isExcluded": true }
                }
            },
            "ImGuiIO": {
                "fields": {
                    "MouseDown": { "isExcluded": true },
                    "KeysData": { "isExcluded": true },
                    "MouseClickedPos": { "isExcluded": true },
                    "MouseClickedTime": { "isExcluded": true },
                    "MouseClicked": { "isExcluded": true },
                    "MouseClickedCount": { "isExcluded": true },
                    "MouseDoubleClicked": { "isExcluded": true },
                    "MouseDoubleClickedTime": { "isExcluded": true },
                    "MouseClickedLastCount": { "isExcluded": true },
                    "MouseReleased": { "isExcluded": true },
                    "MouseReleasedTime": { "isExcluded": true },
                    "MouseDownOwned": { "isExcluded": true },
                    "MouseDownOwnedUnlessPopupClose": { "isExcluded": true },
                    "MouseDownDuration": { "isExcluded": true },
                    "MouseDownDurationPrev": { "isExcluded": true },
                    "MouseDragMaxDistanceAbs": { "isExcluded": true },
                    "MouseDragMaxDistanceSqr": { "isExcluded": true },
                    "InputQueueCharacters": { "isExcluded": true }
                }
            },
            "ImGuiMultiSelectIO": { "isOpaque": true },
            "ImGuiSelectionRequest": { "isExcluded": true },
            "ImGuiPlatformImeData": { "isExcluded": true },
            "ImGuiPlatformMonitor": { "isExcluded": true },
            "ImGuiPlatformIO": { "isOpaque": true },
            "ImGuiViewport": { "isExcluded": false },
            "ImFont": { "isOpaque": true },
            "ImFontBaked": { "isOpaque": true },
            "ImFontAtlas": { "isOpaque": true },
            "ImFontAtlasRect": { "isExcluded": true },
            "ImFontGlyphRangesBuilder": { "isExcluded": true },
            "ImFontGlyph": { "isExcluded": true },
            "ImFontConfig": { "isExcluded": true },
            "ImTextureData": { "isExcluded": true },
            "ImTextureRect": { "isExcluded": true },
            "ImDrawList": {
                "fields": {
                    "CmdBuffer": { "isExcluded": true },
                    "IdxBuffer": { "isExcluded": true },
                    "VtxBuffer": { "isExcluded": true },
                    "_VtxCurrentIdx": { "isExcluded": true },
                    "_Data": { "isExcluded": true },
                    "_VtxWritePtr": { "isExcluded": true },
                    "_IdxWritePtr": { "isExcluded": true },
                    "_Path": { "isExcluded": true },
                    "_CmdHeader": { "isExcluded": true },
                    "_Splitter": { "isExcluded": true },
                    "_ClipRectStack": { "isExcluded": true },
                    "_TextureStack": { "isExcluded": true },
                    "_CallbacksDataBuf": { "isExcluded": true },
                    "_FringeScale": { "isExcluded": true },
                    "_OwnerName": { "isExcluded": true }
                }
            },
            "ImDrawListSplitter": { "isExcluded": true },
            "ImGuiTextBuffer": { "isExcluded": true },
            "ImGuiStorage": { "isExcluded": true }
        },
        "functions": {
            "ImGui_Text": {
                "overrideImpl": {
                    "ts": [
                        "    Text(fmt: string): void {\n",
                        "        Mod.export.ImGui_Text(fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_Text\", [](std::string fmt){\n",
                        "    ImGui_TextUnformatted(fmt.c_str(), nullptr);\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_TextColored": {
                "overrideImpl": {
                    "ts": [
                        "    TextColored(col: ImVec4, fmt: string): void {\n",
                        "        Mod.export.ImGui_TextColored(col, fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_TextColored\", [](JsVal col, std::string fmt){\n",
                        "    ImGui_TextColored(get_imvec4(col), \"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_TextDisabled": {
                "overrideImpl": {
                    "ts": [
                        "    TextDisabled(fmt: string): void {\n",
                        "        Mod.export.ImGui_TextDisabled(fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_TextDisabled\", [](std::string fmt){\n",
                        "    ImGui_TextDisabled(\"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_TextWrapped": {
                "overrideImpl": {
                    "ts": [
                        "    TextWrapped(fmt: string): void {\n",
                        "        Mod.export.ImGui_TextWrapped(fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_TextWrapped\", [](std::string fmt){\n",
                        "    ImGui_TextWrapped(\"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_LabelText": {
                "overrideImpl": {
                    "ts": [
                        "    LabelText(label: string, fmt: string): void {\n",
                        "        Mod.export.ImGui_LabelText(label, fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_LabelText\", [](std::string label, std::string fmt){\n",
                        "    ImGui_LabelText(label.c_str(), \"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_BulletText": {
                "overrideImpl": {
                    "ts": [
                        "    BulletText(fmt: string): void {\n",
                        "        Mod.export.ImGui_BulletText(fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_BulletText\", [](std::string fmt){\n",
                        "    ImGui_BulletText(\"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_DebugLog": {
                "overrideImpl": {
                    "ts": [
                        "    DebugLog(fmt: string): void {\n",
                        "        Mod.export.ImGui_DebugLog(fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_DebugLog\", [](std::string fmt){\n",
                        "    ImGui_DebugLog(\"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_LogText": {
                "overrideImpl": {
                    "ts": [
                        "    LogText(fmt: string): void {\n",
                        "        Mod.export.ImGui_LogText(fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_LogText\", [](std::string fmt){\n",
                        "    ImGui_LogText(\"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_SetTooltip": {
                "overrideImpl": {
                    "ts": [
                        "    SetTooltip(fmt: string): void {\n",
                        "        Mod.export.ImGui_SetTooltip(fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_SetTooltip\", [](std::string fmt){\n",
                        "    ImGui_SetTooltip(\"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_SetItemTooltip": {
                "overrideImpl": {
                    "ts": [
                        "    SetItemTooltip(fmt: string): void {\n",
                        "        Mod.export.ImGui_SetItemTooltip(fmt);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_SetItemTooltip\", [](std::string fmt){\n",
                        "    ImGui_SetItemTooltip(\"%s\", fmt.c_str());\n",
                        "});\n"
                    ]
                }
            },

            "ImGui_InputText": {
                "overrideImpl": {
                    "ts": [
                        "    InputText(label: string, buf: [string], buf_size: number, flags: ImGuiInputTextFlags = 0): void {\n",
                        "        Mod.export.ImGui_InputText(label, buf, buf_size, flags);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_InputText\", [](std::string label, JsVal buf, size_t buf_size, ImGuiInputTextFlags flags){\n",
                        "    auto _bind_buf = buf[0].as<std::string>();\n",
                        "    _bind_buf.reserve(buf_size);\n",
                        "    auto const ret = ImGui_InputText(label.c_str(), _bind_buf.data(), buf_size, flags, nullptr, nullptr);\n",
                        "    buf.set(0, std::string(_bind_buf.data()));\n",
                        "    return ret;\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_InputTextMultiline": {
                "overrideImpl": {
                    "ts": [
                        "    InputTextMultiline(label: string, buf: [string], buf_size: number, size: ImVec2 = new ImVec2(0, 0), flags: ImGuiInputTextFlags = 0): void {\n",
                        "        Mod.export.ImGui_InputTextMultiline(label, buf, buf_size, size, flags);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_InputTextMultiline\", [](std::string label, JsVal buf, size_t buf_size, JsVal size, ImGuiInputTextFlags flags){\n",
                        "    auto _bind_buf = buf[0].as<std::string>();\n",
                        "    _bind_buf.reserve(buf_size);\n",
                        "    auto const ret = ImGui_InputTextMultiline(label.c_str(), _bind_buf.data(), buf_size, get_imvec2(size), flags, nullptr, nullptr);\n",
                        "    buf.set(0, std::string(_bind_buf.data()));\n",
                        "    return ret;\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_InputTextWithHint": {
                "overrideImpl": {
                    "ts": [
                        "    InputTextWithHint(label: string, hint: string, buf: [string], buf_size: number, flags: ImGuiInputTextFlags = 0): void {\n",
                        "        Mod.export.ImGui_InputTextWithHint(label, hint, buf, buf_size, flags);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_InputTextWithHint\", [](std::string label, std::string hint, JsVal buf, size_t buf_size, ImGuiInputTextFlags flags){\n",
                        "    auto _bind_buf = buf[0].as<std::string>();\n",
                        "    _bind_buf.reserve(buf_size);\n",
                        "    auto const ret = ImGui_InputTextWithHint(label.c_str(), hint.c_str(), _bind_buf.data(), buf_size, flags, nullptr, nullptr);\n",
                        "    buf.set(0, std::string(_bind_buf.data()));\n",
                        "    return ret;\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_SetNextWindowSizeConstraints": {
                "overrideImpl": {
                    "ts": [
                        "    SetNextWindowSizeConstraints(min: ImVec2, max: ImVec2): void {\n",
                        "        Mod.export.ImGui_SetNextWindowSizeConstraints(min, max);\n",
                        "    },\n"
                    ],
                    "cpp": [
                        "bind_fn(\"ImGui_SetNextWindowSizeConstraints\", [](JsVal min, JsVal max){\n",
                        "    ImGui_SetNextWindowSizeConstraints(get_imvec2(min), get_imvec2(max), nullptr, nullptr);\n",
                        "});\n"
                    ]
                }
            },
            "ImGui_ComboChar": { "isExcluded": true },
            "ImGui_ComboCallback": { "isExcluded": true },
            "ImGui_ListBox": { "isExcluded": true },
            "ImGui_ListBoxCallback": { "isExcluded": true },
            "ImGui_PlotLinesCallback": { "isExcluded": true },
            "ImGui_PlotHistogramCallback": { "isExcluded": true },
            "ImGui_SetDragDropPayload": { "isExcluded": true },

            "ImGui_TextV": { "isExcluded": true },
            "ImGui_TextUnformatted": { "isExcluded": true },
            "ImGui_TextColoredV": { "isExcluded": true },
            "ImGui_TextDisabledV": { "isExcluded": true },
            "ImGui_TextWrappedV": { "isExcluded": true },
            "ImGui_LabelTextV": { "isExcluded": true },
            "ImGui_BulletTextV": { "isExcluded": true },
            "ImGui_DebugLogV": { "isExcluded": true },
            "ImGui_LogTextV": { "isExcluded": true },
            "ImGui_SetTooltipV": { "isExcluded": true },
            "ImGui_SetItemTooltipV": { "isExcluded": true },
            "ImGui_LoadIniSettingsFromDisk": { "isExcluded": true },
            "ImGui_SaveIniSettingsToDisk": { "isExcluded": true },
            "ImGui_TreeNodeStr": { "isExcluded": true },
            "ImGui_TreeNodePtr": { "isExcluded": true },
            "ImGui_TreeNodeV": { "isExcluded": true },
            "ImGui_TreeNodeVPtr": { "isExcluded": true },
            "ImGui_TreeNodeExStr": { "isExcluded": true },
            "ImGui_TreeNodeExPtr": { "isExcluded": true },
            "ImGui_TreeNodeExV": { "isExcluded": true },
            "ImGui_TreeNodeExVPtr": { "isExcluded": true },
            "ImGui_TreePushPtr": { "isExcluded": true },
            "ImGui_PushIDPtr": { "isExcluded": true },
            "ImGui_PushIDStr": { "isExcluded": true },
            "ImGui_GetIDStr": { "isExcluded": true },
            "ImGui_GetIDPtr": { "isExcluded": true },
            "ImGui_DragScalar": { "isExcluded": true },
            "ImGui_DragScalarN": { "isExcluded": true },
            "ImGui_SliderScalar": { "isExcluded": true },
            "ImGui_SliderScalarN": { "isExcluded": true },
            "ImGui_InputScalar": { "isExcluded": true },
            "ImGui_InputScalarN": { "isExcluded": true },
            "ImGui_VSliderFloat": { "isExcluded": true },
            "ImGui_VSliderInt": { "isExcluded": true },
            "ImGui_VSliderScalar": { "isExcluded": true },
            "ImGui_SetStateStorage": { "isExcluded": true },
            "ImGui_GetStateStorage": { "isExcluded": true },
            "ImGui_ColorConvertU32ToFloat4": { "isExcluded": true },
            "ImGui_ColorConvertFloat4ToU32": { "isExcluded": true },
            "ImGui_ColorConvertRGBtoHSV": { "isExcluded": true },
            "ImGui_ColorConvertHSVtoRGB": { "isExcluded": true },
            "ImGui_SetAllocatorFunctions": { "isExcluded": true },
            "ImGui_GetAllocatorFunctions": { "isExcluded": true },
            "ImGui_MemAlloc": { "isExcluded": true },
            "ImGui_MemFree": { "isExcluded": true }
        }
    }
}
